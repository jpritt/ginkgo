clust <- readRDS('/local1/work/ginkgodev/uploads/tGLI17RV6tosyUFkgpac/clust.hclust')
memb <- cutree(clust, h=5)
meb
memb
groups <- tapply(names(memb), memb, c)
groups
groups[1]
length(groups[1])
groups[[1]]
length(groups[[1]])
quit()
library('ctc')
clust <- readRDS("/local1/work/ginkgodev/uploads/tGLI17RV6tosyUFkgpac/clust.hclust")
clust.height
clust[["height"]]
clust[["merge"]]
hc2Newick(clust)
clust[["order"]]
clust[["labels"]]
hc2Newick(clust, flat=FALSE)
hc2Newick(clust, flat=TRUE)
hc2Newick2 <- function(hc, flat=TRUE) {
  dist <- 0
  if (is.null(hc$labels))
    labels <- seq(along=hc$order)
  else
    labels <- hc$labels
  putparenthesis <- function(i) {
    ## recursive function
    ## i: index of row in hc$merge
    j <- hc$merge[i, 1]
    k <- hc$merge[i, 2]
    
    if (j < 0) {
      left <- labels[-j]
      if (k > 0)
        dist <- hc$height[i] - hc$height[k]
      else
        dist <- hc$height[i]
    } else {
      left <- putparenthesis(j)
    }
    if (k < 0) {
      right <- labels[-k]
      if (j > 0)
        dist <- hc$height[i] - hc$height[j]
      else
        dist <- hc$height[i]
    } else {
      right <- putparenthesis(k)
    } 
    if (flat)
      return(paste("(", left, ":", dist, ",", right, ":", dist, ")", sep=""))
    else
      return(list(left=left, right=right, dist=dist))
  }
  
  n <- putparenthesis(nrow(hc$merge))
  if (flat)
    n <- paste(n, ";", sep="")
  
  return(n)
}
hc2newick(clust)
hc2Newick(clust)
hc2Newick2(clust)
clust[["height"]]
clust[["height"]]
clust[["merge"]]
clust[["order"]]
clust[["labels"]]
print(clust)
pdf("clust_new.pdf", sep=""), width=10, height=7)
    op = par(bg = "gray85")
    plot(clust, xlab="Sample", hang=-1, ylab=paste("Distance (", dm, ")", sep=""), lwd=2)
pdf("clust_new.pdf", width=10, height=7)
    op = par(bg = "gray85")
    plot(clust, xlab="Sample", hang=-1, ylab=paste("Distance (", dm, ")", sep=""), lwd=2)
pdf("clust_new.pdf", width=10, height=7)
    op = par(bg = "gray85")
    plot(clust, xlab="Sample", hang=-1, ylab=paste"Distance", lwd=2)
dev.off()
pdf("clust_new.pdf", width=10, height=7)
    op = par(bg = "gray85")
    plot(clust, xlab="Sample", hang=-1, ylab="Distance", lwd=2)
dev.off()
clust[["label"]]
clust[["labels"]]
clust[["merge"]]
hc2Newick(clust, flat=FALSE)
hc2Newick(clust, flat=TRUE)
hc$merge[1, 1]
hc <- clus
hc <- clust
i <- 1
hc$merge[i, 1]
hc$merge[i, 2]
labels[1]
hc[["labels"]][1]
hc[["labels"]][7]
hc2Newick <- function(hc, flat=TRUE) {
  dist <- 0
  if (is.null(hc$labels))
    labels <- seq(along=hc$order)
  else
    labels <- hc$labels
  putparenthesis <- function(i) {
    ## recursive function
    ## i: index of row in hc$merge
    j <- hc$merge[i, 1]
    k <- hc$merge[i, 2]
    
    if (j < 0) {
      left <- labels[-j]
      dist <- hc$height[i]
    } else {
      left <- putparenthesis(j)
      dist <- hc$height[i] - hc$height[j]
    }
    if (k < 0) {
      right <- labels[-k]
      dist <- hc$height[i]
    } else {
      right <- putparenthesis(k)
      dist <- hc$height[i] - hc$height[k]
    }
    
    if (flat)
      return(paste("(", left, ":", dist, ",", right, ":", dist, ")", sep=""))
    else
      return(list(left=left, right=right, dist=dist))
  }
  
  n <- putparenthesis(nrow(hc$merge))
  if (flat)
    n <- paste(n, ";", sep="")
  
  return(n)
}
hc2Newick2(clust)
hc2Newick <- function(hc, flat=TRUE) {
  dist <- 0
  if (is.null(hc$labels))
    labels <- seq(along=hc$order)
  else
    labels <- hc$labels
  putparenthesis <- function(i) {
    ## recursive function
    ## i: index of row in hc$merge
    j <- hc$merge[i, 1]
    k <- hc$merge[i, 2]
    
    if (j < 0) {
      left <- labels[-j]
      distA <- hc$height[i]
    } else {
      left <- putparenthesis(j)
      distA <- hc$height[i] - hc$height[j]
    }
    if (k < 0) {
      right <- labels[-k]
      distB <- hc$height[i]
    } else {
      right <- putparenthesis(k)
      distB <- hc$height[i] - hc$height[k]
    }
    if (flat)
      return(paste("(", left, ":", distA, ",", right, ":", distB, ")", sep=""))
    else
      return(list(left=left, right=right, dist=dist))
  }
  
  n <- putparenthesis(nrow(hc$merge))
  if (flat)
    n <- paste(n, ";", sep="")
  
  return(n)
}
hc2Newick2 <- function(hc, flat=TRUE) {
  dist <- 0
  if (is.null(hc$labels))
    labels <- seq(along=hc$order)
  else
    labels <- hc$labels
  putparenthesis <- function(i) {
    ## recursive function
    ## i: index of row in hc$merge
    j <- hc$merge[i, 1]
    k <- hc$merge[i, 2]
    
    if (j < 0) {
      left <- labels[-j]
      distA <- hc$height[i]
    } else {
      left <- putparenthesis(j)
      distA <- hc$height[i] - hc$height[j]
    }
    if (k < 0) {
      right <- labels[-k]
      distB <- hc$height[i]
    } else {
      right <- putparenthesis(k)
      distB <- hc$height[i] - hc$height[k]
    }
    if (flat)
      return(paste("(", left, ":", distA, ",", right, ":", distB, ")", sep=""))
    else
      return(list(left=left, right=right, dist=dist))
  }
  
  n <- putparenthesis(nrow(hc$merge))
  if (flat)
    n <- paste(n, ";", sep="")
  
  return(n)
}
hc2Newick2(clust)
quit()
a <- Sys.time()
b <- Sys.time()
c <- Sys.time()
d <- Sys.time()
b-a
d-c
c-b
(b-a)+(d-c)
quit()
a <- Sys.time()
b <- Sys.time()
t <- 0
t <- t + (b-a)
t
quit()
for (iter in 1:0) {
  print('Hello')
}
quit()
